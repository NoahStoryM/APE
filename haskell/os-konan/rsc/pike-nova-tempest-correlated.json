[
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.flavorid = :flavorid_1\n      order by flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_id asc",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where flavors.is_public = true\n            or (exists (select 1\n                        from flavor_projects\n                        where flavor_projects.flavor_id = flavors.id\n                              and flavor_projects.project_id = :project_id_1))\n      order by flavors.flavorid asc, flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_flavorid asc, anon_1.flavors_id asc",
    "select anon_1.instance_types_created_at as anon_1_instance_types_created_at,\n       anon_1.instance_types_updated_at as anon_1_instance_types_updated_at,\n       anon_1.instance_types_deleted_at as anon_1_instance_types_deleted_at,\n       anon_1.instance_types_deleted as anon_1_instance_types_deleted,\n       anon_1.instance_types_id as anon_1_instance_types_id,\n       anon_1.instance_types_name as anon_1_instance_types_name,\n       anon_1.instance_types_memory_mb as anon_1_instance_types_memory_mb,\n       anon_1.instance_types_vcpus as anon_1_instance_types_vcpus,\n       anon_1.instance_types_root_gb as anon_1_instance_types_root_gb,\n       anon_1.instance_types_ephemeral_gb as anon_1_instance_types_ephemeral_gb,\n       anon_1.instance_types_flavorid as anon_1_instance_types_flavorid,\n       anon_1.instance_types_swap as anon_1_instance_types_swap,\n       anon_1.instance_types_rxtx_factor as anon_1_instance_types_rxtx_factor,\n       anon_1.instance_types_vcpu_weight as anon_1_instance_types_vcpu_weight,\n       anon_1.instance_types_disabled as anon_1_instance_types_disabled,\n       anon_1.instance_types_is_public as anon_1_instance_types_is_public,\n       instance_type_extra_specs_1.created_at as instance_type_extra_specs_1_created_at,\n       instance_type_extra_specs_1.updated_at as instance_type_extra_specs_1_updated_at,\n       instance_type_extra_specs_1.deleted_at as instance_type_extra_specs_1_deleted_at,\n       instance_type_extra_specs_1.deleted as instance_type_extra_specs_1_deleted,\n       instance_type_extra_specs_1.id as instance_type_extra_specs_1_id,\n       instance_type_extra_specs_1.key as instance_type_extra_specs_1_key,\n       instance_type_extra_specs_1.value as instance_type_extra_specs_1_value,\n       instance_type_extra_specs_1.instance_type_id as instance_type_extra_specs_1_instance_type_id\nfrom (select instance_types.created_at as instance_types_created_at,\n             instance_types.updated_at as instance_types_updated_at,\n             instance_types.deleted_at as instance_types_deleted_at,\n             instance_types.deleted as instance_types_deleted,\n             instance_types.id as instance_types_id,\n             instance_types.name as instance_types_name,\n             instance_types.memory_mb as instance_types_memory_mb,\n             instance_types.vcpus as instance_types_vcpus,\n             instance_types.root_gb as instance_types_root_gb,\n             instance_types.ephemeral_gb as instance_types_ephemeral_gb,\n             instance_types.flavorid as instance_types_flavorid,\n             instance_types.swap as instance_types_swap,\n             instance_types.rxtx_factor as instance_types_rxtx_factor,\n             instance_types.vcpu_weight as instance_types_vcpu_weight,\n             instance_types.disabled as instance_types_disabled,\n             instance_types.is_public as instance_types_is_public\n      from instance_types\n      where instance_types.deleted = :deleted_1\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.deleted = :deleted_3\n                                   and instance_type_projects.project_id = :project_id_1)))\n      order by instance_types.flavorid asc, instance_types.id asc\n      limit :param_1)\n     as anon_1\n     left join instance_type_extra_specs as instance_type_extra_specs_1\n     on instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id\n        and instance_type_extra_specs_1.deleted = :deleted_4\norder by anon_1.instance_types_flavorid asc,\n         anon_1.instance_types_id asc",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.disabled = false\n            and (flavors.is_public = true\n                 or (exists (select 1\n                             from flavor_projects\n                             where flavor_projects.flavor_id = flavors.id\n                                   and flavor_projects.project_id = :project_id_2)))\n      order by flavors.flavorid asc, flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_flavorid asc, anon_1.flavors_id asc",
    "select anon_1.instance_types_created_at as anon_1_instance_types_created_at,\n       anon_1.instance_types_updated_at as anon_1_instance_types_updated_at,\n       anon_1.instance_types_deleted_at as anon_1_instance_types_deleted_at,\n       anon_1.instance_types_deleted as anon_1_instance_types_deleted,\n       anon_1.instance_types_id as anon_1_instance_types_id,\n       anon_1.instance_types_name as anon_1_instance_types_name,\n       anon_1.instance_types_memory_mb as anon_1_instance_types_memory_mb,\n       anon_1.instance_types_vcpus as anon_1_instance_types_vcpus,\n       anon_1.instance_types_root_gb as anon_1_instance_types_root_gb,\n       anon_1.instance_types_ephemeral_gb as anon_1_instance_types_ephemeral_gb,\n       anon_1.instance_types_flavorid as anon_1_instance_types_flavorid,\n       anon_1.instance_types_swap as anon_1_instance_types_swap,\n       anon_1.instance_types_rxtx_factor as anon_1_instance_types_rxtx_factor,\n       anon_1.instance_types_vcpu_weight as anon_1_instance_types_vcpu_weight,\n       anon_1.instance_types_disabled as anon_1_instance_types_disabled,\n       anon_1.instance_types_is_public as anon_1_instance_types_is_public,\n       instance_type_extra_specs_1.created_at as instance_type_extra_specs_1_created_at,\n       instance_type_extra_specs_1.updated_at as instance_type_extra_specs_1_updated_at,\n       instance_type_extra_specs_1.deleted_at as instance_type_extra_specs_1_deleted_at,\n       instance_type_extra_specs_1.deleted as instance_type_extra_specs_1_deleted,\n       instance_type_extra_specs_1.id as instance_type_extra_specs_1_id,\n       instance_type_extra_specs_1.key as instance_type_extra_specs_1_key,\n       instance_type_extra_specs_1.value as instance_type_extra_specs_1_value,\n       instance_type_extra_specs_1.instance_type_id as instance_type_extra_specs_1_instance_type_id\nfrom (select instance_types.created_at as instance_types_created_at,\n             instance_types.updated_at as instance_types_updated_at,\n             instance_types.deleted_at as instance_types_deleted_at,\n             instance_types.deleted as instance_types_deleted,\n             instance_types.id as instance_types_id,\n             instance_types.name as instance_types_name,\n             instance_types.memory_mb as instance_types_memory_mb,\n             instance_types.vcpus as instance_types_vcpus,\n             instance_types.root_gb as instance_types_root_gb,\n             instance_types.ephemeral_gb as instance_types_ephemeral_gb,\n             instance_types.flavorid as instance_types_flavorid,\n             instance_types.swap as instance_types_swap,\n             instance_types.rxtx_factor as instance_types_rxtx_factor,\n             instance_types.vcpu_weight as instance_types_vcpu_weight,\n             instance_types.disabled as instance_types_disabled,\n             instance_types.is_public as instance_types_is_public\n      from instance_types\n      where instance_types.deleted = :deleted_1\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.project_id = :project_id_1)))\n            and instance_types.disabled = false\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.deleted = :deleted_3\n                                   and instance_type_projects.project_id = :project_id_2)))\n      order by instance_types.flavorid asc, instance_types.id asc\n      limit :param_1)\n     as anon_1\n     left join instance_type_extra_specs as instance_type_extra_specs_1\n     on instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id\n        and instance_type_extra_specs_1.deleted = :deleted_4\norder by anon_1.instance_types_flavorid asc,\n         anon_1.instance_types_id asc",
    "select anon_1.instance_types_created_at as anon_1_instance_types_created_at,\n       anon_1.instance_types_updated_at as anon_1_instance_types_updated_at,\n       anon_1.instance_types_deleted_at as anon_1_instance_types_deleted_at,\n       anon_1.instance_types_deleted as anon_1_instance_types_deleted,\n       anon_1.instance_types_id as anon_1_instance_types_id,\n       anon_1.instance_types_name as anon_1_instance_types_name,\n       anon_1.instance_types_memory_mb as anon_1_instance_types_memory_mb,\n       anon_1.instance_types_vcpus as anon_1_instance_types_vcpus,\n       anon_1.instance_types_root_gb as anon_1_instance_types_root_gb,\n       anon_1.instance_types_ephemeral_gb as anon_1_instance_types_ephemeral_gb,\n       anon_1.instance_types_flavorid as anon_1_instance_types_flavorid,\n       anon_1.instance_types_swap as anon_1_instance_types_swap,\n       anon_1.instance_types_rxtx_factor as anon_1_instance_types_rxtx_factor,\n       anon_1.instance_types_vcpu_weight as anon_1_instance_types_vcpu_weight,\n       anon_1.instance_types_disabled as anon_1_instance_types_disabled,\n       anon_1.instance_types_is_public as anon_1_instance_types_is_public,\n       instance_type_extra_specs_1.created_at as instance_type_extra_specs_1_created_at,\n       instance_type_extra_specs_1.updated_at as instance_type_extra_specs_1_updated_at,\n       instance_type_extra_specs_1.deleted_at as instance_type_extra_specs_1_deleted_at,\n       instance_type_extra_specs_1.deleted as instance_type_extra_specs_1_deleted,\n       instance_type_extra_specs_1.id as instance_type_extra_specs_1_id,\n       instance_type_extra_specs_1.key as instance_type_extra_specs_1_key,\n       instance_type_extra_specs_1.value as instance_type_extra_specs_1_value,\n       instance_type_extra_specs_1.instance_type_id as instance_type_extra_specs_1_instance_type_id\nfrom (select instance_types.created_at as instance_types_created_at,\n             instance_types.updated_at as instance_types_updated_at,\n             instance_types.deleted_at as instance_types_deleted_at,\n             instance_types.deleted as instance_types_deleted,\n             instance_types.id as instance_types_id,\n             instance_types.name as instance_types_name,\n             instance_types.memory_mb as instance_types_memory_mb,\n             instance_types.vcpus as instance_types_vcpus,\n             instance_types.root_gb as instance_types_root_gb,\n             instance_types.ephemeral_gb as instance_types_ephemeral_gb,\n             instance_types.flavorid as instance_types_flavorid,\n             instance_types.swap as instance_types_swap,\n             instance_types.rxtx_factor as instance_types_rxtx_factor,\n             instance_types.vcpu_weight as instance_types_vcpu_weight,\n             instance_types.disabled as instance_types_disabled,\n             instance_types.is_public as instance_types_is_public\n      from instance_types\n      where instance_types.deleted = :deleted_1\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.project_id = :project_id_1)))\n            and instance_types.flavorid = :flavorid_1\n      order by instance_types.deleted asc, instance_types.id asc\n      limit :param_1)\n     as anon_1\n     left join instance_type_extra_specs as instance_type_extra_specs_1\n     on instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id\n        and instance_type_extra_specs_1.deleted = :deleted_3\norder by anon_1.instance_types_deleted asc,\n         anon_1.instance_types_id asc",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.root_gb >= :root_gb_1\n            and flavors.disabled = false\n            and (flavors.is_public = true\n                 or (exists (select 1\n                             from flavor_projects\n                             where flavor_projects.flavor_id = flavors.id\n                                   and flavor_projects.project_id = :project_id_2)))\n      order by flavors.flavorid asc, flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_flavorid asc, anon_1.flavors_id asc",
    "select anon_1.instance_types_created_at as anon_1_instance_types_created_at,\n       anon_1.instance_types_updated_at as anon_1_instance_types_updated_at,\n       anon_1.instance_types_deleted_at as anon_1_instance_types_deleted_at,\n       anon_1.instance_types_deleted as anon_1_instance_types_deleted,\n       anon_1.instance_types_id as anon_1_instance_types_id,\n       anon_1.instance_types_name as anon_1_instance_types_name,\n       anon_1.instance_types_memory_mb as anon_1_instance_types_memory_mb,\n       anon_1.instance_types_vcpus as anon_1_instance_types_vcpus,\n       anon_1.instance_types_root_gb as anon_1_instance_types_root_gb,\n       anon_1.instance_types_ephemeral_gb as anon_1_instance_types_ephemeral_gb,\n       anon_1.instance_types_flavorid as anon_1_instance_types_flavorid,\n       anon_1.instance_types_swap as anon_1_instance_types_swap,\n       anon_1.instance_types_rxtx_factor as anon_1_instance_types_rxtx_factor,\n       anon_1.instance_types_vcpu_weight as anon_1_instance_types_vcpu_weight,\n       anon_1.instance_types_disabled as anon_1_instance_types_disabled,\n       anon_1.instance_types_is_public as anon_1_instance_types_is_public,\n       instance_type_extra_specs_1.created_at as instance_type_extra_specs_1_created_at,\n       instance_type_extra_specs_1.updated_at as instance_type_extra_specs_1_updated_at,\n       instance_type_extra_specs_1.deleted_at as instance_type_extra_specs_1_deleted_at,\n       instance_type_extra_specs_1.deleted as instance_type_extra_specs_1_deleted,\n       instance_type_extra_specs_1.id as instance_type_extra_specs_1_id,\n       instance_type_extra_specs_1.key as instance_type_extra_specs_1_key,\n       instance_type_extra_specs_1.value as instance_type_extra_specs_1_value,\n       instance_type_extra_specs_1.instance_type_id as instance_type_extra_specs_1_instance_type_id\nfrom (select instance_types.created_at as instance_types_created_at,\n             instance_types.updated_at as instance_types_updated_at,\n             instance_types.deleted_at as instance_types_deleted_at,\n             instance_types.deleted as instance_types_deleted,\n             instance_types.id as instance_types_id,\n             instance_types.name as instance_types_name,\n             instance_types.memory_mb as instance_types_memory_mb,\n             instance_types.vcpus as instance_types_vcpus,\n             instance_types.root_gb as instance_types_root_gb,\n             instance_types.ephemeral_gb as instance_types_ephemeral_gb,\n             instance_types.flavorid as instance_types_flavorid,\n             instance_types.swap as instance_types_swap,\n             instance_types.rxtx_factor as instance_types_rxtx_factor,\n             instance_types.vcpu_weight as instance_types_vcpu_weight,\n             instance_types.disabled as instance_types_disabled,\n             instance_types.is_public as instance_types_is_public\n      from instance_types\n      where instance_types.deleted = :deleted_1\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.project_id = :project_id_1)))\n            and instance_types.root_gb >= :root_gb_1\n            and instance_types.disabled = false\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.deleted = :deleted_3\n                                   and instance_type_projects.project_id = :project_id_2)))\n      order by instance_types.flavorid asc, instance_types.id asc\n      limit :param_1)\n     as anon_1\n     left join instance_type_extra_specs as instance_type_extra_specs_1\n     on instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id\n        and instance_type_extra_specs_1.deleted = :deleted_4\norder by anon_1.instance_types_flavorid asc,\n         anon_1.instance_types_id asc",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.memory_mb >= :memory_mb_1\n            and flavors.disabled = false\n            and (flavors.is_public = true\n                 or (exists (select 1\n                             from flavor_projects\n                             where flavor_projects.flavor_id = flavors.id\n                                   and flavor_projects.project_id = :project_id_2)))\n      order by flavors.flavorid asc, flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_flavorid asc, anon_1.flavors_id asc",
    "select anon_1.instance_types_created_at as anon_1_instance_types_created_at,\n       anon_1.instance_types_updated_at as anon_1_instance_types_updated_at,\n       anon_1.instance_types_deleted_at as anon_1_instance_types_deleted_at,\n       anon_1.instance_types_deleted as anon_1_instance_types_deleted,\n       anon_1.instance_types_id as anon_1_instance_types_id,\n       anon_1.instance_types_name as anon_1_instance_types_name,\n       anon_1.instance_types_memory_mb as anon_1_instance_types_memory_mb,\n       anon_1.instance_types_vcpus as anon_1_instance_types_vcpus,\n       anon_1.instance_types_root_gb as anon_1_instance_types_root_gb,\n       anon_1.instance_types_ephemeral_gb as anon_1_instance_types_ephemeral_gb,\n       anon_1.instance_types_flavorid as anon_1_instance_types_flavorid,\n       anon_1.instance_types_swap as anon_1_instance_types_swap,\n       anon_1.instance_types_rxtx_factor as anon_1_instance_types_rxtx_factor,\n       anon_1.instance_types_vcpu_weight as anon_1_instance_types_vcpu_weight,\n       anon_1.instance_types_disabled as anon_1_instance_types_disabled,\n       anon_1.instance_types_is_public as anon_1_instance_types_is_public,\n       instance_type_extra_specs_1.created_at as instance_type_extra_specs_1_created_at,\n       instance_type_extra_specs_1.updated_at as instance_type_extra_specs_1_updated_at,\n       instance_type_extra_specs_1.deleted_at as instance_type_extra_specs_1_deleted_at,\n       instance_type_extra_specs_1.deleted as instance_type_extra_specs_1_deleted,\n       instance_type_extra_specs_1.id as instance_type_extra_specs_1_id,\n       instance_type_extra_specs_1.key as instance_type_extra_specs_1_key,\n       instance_type_extra_specs_1.value as instance_type_extra_specs_1_value,\n       instance_type_extra_specs_1.instance_type_id as instance_type_extra_specs_1_instance_type_id\nfrom (select instance_types.created_at as instance_types_created_at,\n             instance_types.updated_at as instance_types_updated_at,\n             instance_types.deleted_at as instance_types_deleted_at,\n             instance_types.deleted as instance_types_deleted,\n             instance_types.id as instance_types_id,\n             instance_types.name as instance_types_name,\n             instance_types.memory_mb as instance_types_memory_mb,\n             instance_types.vcpus as instance_types_vcpus,\n             instance_types.root_gb as instance_types_root_gb,\n             instance_types.ephemeral_gb as instance_types_ephemeral_gb,\n             instance_types.flavorid as instance_types_flavorid,\n             instance_types.swap as instance_types_swap,\n             instance_types.rxtx_factor as instance_types_rxtx_factor,\n             instance_types.vcpu_weight as instance_types_vcpu_weight,\n             instance_types.disabled as instance_types_disabled,\n             instance_types.is_public as instance_types_is_public\n      from instance_types\n      where instance_types.deleted = :deleted_1\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.project_id = :project_id_1)))\n            and instance_types.memory_mb >= :memory_mb_1\n            and instance_types.disabled = false\n            and (instance_types.is_public = true\n                 or (exists (select 1\n                             from instance_type_projects\n                             where instance_type_projects.instance_type_id = instance_types.id\n                                   and instance_type_projects.deleted = :deleted_2\n                                   and instance_type_projects.deleted = :deleted_3\n                                   and instance_type_projects.project_id = :project_id_2)))\n      order by instance_types.flavorid asc, instance_types.id asc\n      limit :param_1)\n     as anon_1\n     left join instance_type_extra_specs as instance_type_extra_specs_1\n     on instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id\n        and instance_type_extra_specs_1.deleted = :deleted_4\norder by anon_1.instance_types_flavorid asc,\n         anon_1.instance_types_id asc",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.flavorid = :flavorid_1\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id",
    "select anon_1.flavors_created_at as anon_1_flavors_created_at,\n       anon_1.flavors_updated_at as anon_1_flavors_updated_at,\n       anon_1.flavors_id as anon_1_flavors_id,\n       anon_1.flavors_name as anon_1_flavors_name,\n       anon_1.flavors_memory_mb as anon_1_flavors_memory_mb,\n       anon_1.flavors_vcpus as anon_1_flavors_vcpus,\n       anon_1.flavors_root_gb as anon_1_flavors_root_gb,\n       anon_1.flavors_ephemeral_gb as anon_1_flavors_ephemeral_gb,\n       anon_1.flavors_flavorid as anon_1_flavors_flavorid,\n       anon_1.flavors_swap as anon_1_flavors_swap,\n       anon_1.flavors_rxtx_factor as anon_1_flavors_rxtx_factor,\n       anon_1.flavors_vcpu_weight as anon_1_flavors_vcpu_weight,\n       anon_1.flavors_disabled as anon_1_flavors_disabled,\n       anon_1.flavors_is_public as anon_1_flavors_is_public,\n       flavor_extra_specs_1.created_at as flavor_extra_specs_1_created_at,\n       flavor_extra_specs_1.updated_at as flavor_extra_specs_1_updated_at,\n       flavor_extra_specs_1.id as flavor_extra_specs_1_id,\n       flavor_extra_specs_1.key as flavor_extra_specs_1_key,\n       flavor_extra_specs_1.value as flavor_extra_specs_1_value,\n       flavor_extra_specs_1.flavor_id as flavor_extra_specs_1_flavor_id\nfrom (select flavors.created_at as flavors_created_at,\n             flavors.updated_at as flavors_updated_at,\n             flavors.id as flavors_id,\n             flavors.name as flavors_name,\n             flavors.memory_mb as flavors_memory_mb,\n             flavors.vcpus as flavors_vcpus,\n             flavors.root_gb as flavors_root_gb,\n             flavors.ephemeral_gb as flavors_ephemeral_gb,\n             flavors.flavorid as flavors_flavorid,\n             flavors.swap as flavors_swap,\n             flavors.rxtx_factor as flavors_rxtx_factor,\n             flavors.vcpu_weight as flavors_vcpu_weight,\n             flavors.disabled as flavors_disabled,\n             flavors.is_public as flavors_is_public\n      from flavors\n      where (flavors.is_public = true\n             or (exists (select 1\n                         from flavor_projects\n                         where flavor_projects.flavor_id = flavors.id\n                               and flavor_projects.project_id = :project_id_1)))\n            and flavors.disabled = false\n            and (flavors.is_public = true\n                 or (exists (select 1\n                             from flavor_projects\n                             where flavor_projects.flavor_id = flavors.id\n                                   and flavor_projects.project_id = :project_id_2)))\n            and (flavors.flavorid > :flavorid_1\n                 or flavors.flavorid = :flavorid_2\n                    and flavors.id > :id_1)\n      order by flavors.flavorid asc, flavors.id asc\n      limit :param_1)\n     as anon_1\n     left join flavor_extra_specs as flavor_extra_specs_1\n     on flavor_extra_specs_1.flavor_id = anon_1.flavors_id\norder by anon_1.flavors_flavorid asc, anon_1.flavors_id asc"
]

